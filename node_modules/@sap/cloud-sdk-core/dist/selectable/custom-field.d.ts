/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Constructable } from '../constructable';
import { Entity } from '../entity';
import { BigNumberField } from './big-number-field';
import { BooleanField } from './boolean-field';
import { DateField } from './date-field';
import { Field } from './field';
import { NumberField } from './number-field';
import { StringField } from './string-field';
import { TimeField } from './time-field';
export declare class CustomField<EntityT extends Entity> extends Field<EntityT> {
    readonly fieldName: string;
    readonly entityConstructor: Constructable<EntityT>;
    constructor(fieldName: string, entityConstructor: Constructable<EntityT>);
    edmString(): StringField<EntityT>;
    edmBoolean(): BooleanField<EntityT>;
    edmGuid(): StringField<EntityT>;
    edmDecimal(): BigNumberField<EntityT>;
    edmInt16(): NumberField<EntityT>;
    edmInt32(): NumberField<EntityT>;
    edmInt64(): BigNumberField<EntityT>;
    edmSingle(): NumberField<EntityT>;
    edmDouble(): NumberField<EntityT>;
    edmByte(): NumberField<EntityT>;
    edmSByte(): NumberField<EntityT>;
    edmDateTime(): DateField<EntityT>;
    edmDateTimeOffset(): DateField<EntityT>;
    edmBinary(): StringField<EntityT>;
    edmTime(): TimeField<EntityT>;
}
//# sourceMappingURL=custom-field.d.ts.map