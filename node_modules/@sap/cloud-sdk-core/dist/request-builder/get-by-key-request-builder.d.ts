/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { MapType } from '@sap/cloud-sdk-util';
import { AxiosResponse } from 'axios';
import { Constructable } from '../constructable';
import { Entity, EntityIdentifiable } from '../entity';
import { Destination, DestinationNameAndJwt, DestinationRetrievalOptions } from '../scp-cf/destination-service-types';
import { Selectable } from '../selectable';
import { FieldType } from '../selectable/field';
import { MethodRequestBuilderBase } from './request-builder-base';
import { ODataGetByKeyRequestConfig } from './request/odata-get-by-key-request-config';
/**
 * Create OData request to get a single entity based on its key properties. A `GetByKeyRequestBuilder` allows to restrict the response to a selection of fields,
 * where no selection is equal to selecting all fields.
 *
 * @typeparam EntityT Type of the entity to be requested
 */
export declare class GetByKeyRequestBuilder<EntityT extends Entity> extends MethodRequestBuilderBase<ODataGetByKeyRequestConfig<EntityT>> implements EntityIdentifiable<EntityT> {
    readonly entityConstructor: Constructable<EntityT>;
    /**
     * Creates an instance of GetByKeyRequestBuilder.
     *
     * @param entityConstructor Constructor of the entity to create the request for
     * @param keys Key-value pairs where the key is the name of a key property of the given entity and the value is the respective value
     */
    constructor(entityConstructor: Constructable<EntityT>, keys: MapType<FieldType>);
    /**
     * Restrict the response to the given selection of properties in the request.
     *
     * @param selects Fields to select in the request
     * @returns The request builder itself, to facilitate method chaining
     */
    select(...selects: Array<Selectable<EntityT>>): this;
    /**
     * Execute request.
     *
     * @param destination Destination to execute the request against
     * @param options Options to employ when fetching destinations
     * @returns A promise resolving to the requested entity
     */
    execute(destination: Destination | DestinationNameAndJwt, options?: DestinationRetrievalOptions): Promise<EntityT>;
    protected extractEtagFromHeader(response: AxiosResponse): string | undefined;
}
//# sourceMappingURL=get-by-key-request-builder.d.ts.map