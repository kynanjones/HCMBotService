/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Constructable } from '../constructable';
import { Entity, EntityIdentifiable } from '../entity';
import { Destination, DestinationNameAndJwt, DestinationRetrievalOptions } from '../scp-cf/destination-service-types';
import { Selectable } from '../selectable';
import { MethodRequestBuilderBase } from './request-builder-base';
import { ODataUpdateRequestConfig } from './request/odata-update-request-config';
/**
 * Create OData query to update an entity.
 *
 * @typeparam EntityT Type of the entity to be updated
 */
export declare class UpdateRequestBuilder<EntityT extends Entity> extends MethodRequestBuilderBase<ODataUpdateRequestConfig<EntityT>> implements EntityIdentifiable<EntityT> {
    readonly entityConstructor: Constructable<EntityT>;
    private entity;
    private ignored;
    private required;
    /**
     * Creates an instance of UpdateRequestBuilder.
     *
     * @param entityConstructor Constructor type of the entity to be updated
     * @param entity Entity to be updated
     */
    constructor(entityConstructor: Constructable<EntityT>, entity: EntityT);
    /**
     * Executes the query.
     *
     * @param destination Destination to execute the request against
     * @param options Options to employ when fetching destinations
     * @returns A promise resolving to the entity once it was updated
     */
    execute(destination: Destination | DestinationNameAndJwt, options?: DestinationRetrievalOptions): Promise<EntityT>;
    /**
     * Specifies required entity keys for the update request.
     *
     * @param fields Enumeration of the fields to be required
     * @returns The entity itself, to facilitate method chaining
     */
    requiredFields(...fields: Array<Selectable<EntityT>>): this;
    /**
     * Specifies entity fields to ignore by the update request.
     *
     * @param fields Enumeration of the fields to be ignored
     * @returns The entity itself, to facilitate method chaining
     */
    ignoredFields(...fields: Array<Selectable<EntityT>>): this;
    /**
     * Instructs the request to force an overwrite of the entity by sending an 'If-Match: *' header instead of sending the ETag version identifier.
     *
     * @returns {this} this The request itself to ease chaining while executing the request
     */
    ignoreVersionIdentifier(): this;
    /**
     * Specifies a custom ETag version identifier of the entity to update.
     *
     * @param {string} etag Custom ETag version identifier to be sent in the header of the request
     * @returns {this} this The request itself to ease chaining while executing the request
     */
    withCustomVersionIdentifier(etag: string): this;
    private getUpdateBody;
    private serializedDiff;
    private removeNavPropsAndComplexTypes;
    private removeKeyFields;
    private removeIgnoredFields;
    private addRequiredFields;
    private getKeyFieldNames;
    private toSet;
    private isEmptyObject;
}
//# sourceMappingURL=update-request-builder.d.ts.map