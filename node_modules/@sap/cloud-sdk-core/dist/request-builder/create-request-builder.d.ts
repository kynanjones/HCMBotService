/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Constructable } from '../constructable';
import { Entity, EntityIdentifiable } from '../entity';
import { Destination, DestinationNameAndJwt, DestinationRetrievalOptions } from '../scp-cf/destination-service-types';
import { Link } from '../selectable';
import { MethodRequestBuilderBase } from './request-builder-base';
import { ODataCreateRequestConfig } from './request/odata-create-request-config';
/**
 * Create OData request to create an entity.
 *
 * @typeparam EntityT Type of the entity to be created
 */
export declare class CreateRequestBuilder<EntityT extends Entity> extends MethodRequestBuilderBase<ODataCreateRequestConfig<EntityT>> implements EntityIdentifiable<EntityT> {
    readonly entityConstructor: Constructable<EntityT>;
    /**
     * Creates an instance of CreateRequestBuilder.
     *
     * @param entityConstructor Constructor type of the entity to be created
     * @param entity Entity to be created
     */
    constructor(entityConstructor: Constructable<EntityT>, entity: EntityT);
    /**
     * Specifies the parent of the entity to create.
     *
     * @param parentEntity Parent of the entity to create
     * @param linkField Static representation of the navigation property that navigates from the parent entity to the child entity
     * @returns The entity itself, to facilitate method chaining
     */
    asChildOf<ParentEntityT extends Entity>(parentEntity: ParentEntityT, linkField: Link<ParentEntityT, EntityT>): this;
    /**
     * Execute query.
     *
     * @param destination Destination to execute the request against
     * @param options Options to employ when fetching destinations
     * @returns A promise resolving to the created entity
     */
    execute(destination: Destination | DestinationNameAndJwt, options?: DestinationRetrievalOptions): Promise<EntityT>;
}
//# sourceMappingURL=create-request-builder.d.ts.map