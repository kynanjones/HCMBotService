/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { MapType } from '@sap/cloud-sdk-util';
import { Destination, ProxyConfiguration } from '../../scp-cf';
import { ODataRequest } from '../request/odata-request';
import { ODataRequestConfig } from '../request/odata-request-config';
/**
 * Create object containing all headers, including custom headers for a given  OData request configuration and destination.
 * Custom headers override duplicate headers.
 *
 * @typeparam EntityT Type of the entity the headers are built for
 * @param {ODataRequest<RequestT>} request OData request configuration to create headers for
 * @returns Key-value pairs where the key is the name of a header property and the value is the respective value
 */
export declare function buildHeaders<RequestT extends ODataRequestConfig>(request: ODataRequest<RequestT>): Promise<MapType<string>>;
/**
 * Builds the authorization, proxy authorization and SAP client headers for a given destination.
 *
 * @param destination A destination.
 * @returns HTTP headers for the given destination.
 */
export declare const buildHeadersForDestination: (destination: Destination) => Promise<MapType<string>>;
export declare const addSapClientHeader: (sapClient?: string) => (headers: MapType<string>) => unknown;
export declare const addProxyHeaders: (proxyConfiguration?: ProxyConfiguration) => (headers: MapType<string>) => MapType<any>;
//# sourceMappingURL=header-builder.d.ts.map