"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var cloud_sdk_util_1 = require("@sap/cloud-sdk-util");
var axios_1 = __importDefault(require("axios"));
var scp_cf_1 = require("../../scp-cf");
var remove_slashes_1 = require("../../util/remove-slashes");
var header_builder_1 = require("../header-builder/header-builder");
var http_agent_1 = require("../http-agent");
/**
 * OData request configuration for an entity type.
 *
 * @typeparam EntityT Type of the entity to setup a request for
 */
var ODataRequest = /** @class */ (function () {
    /**
     * Creates an instance of ODataRequest.
     *
     * @param config Configuration of the request
     * @param _destination Destination to setup the request against
     * @memberof ODataRequest
     */
    function ODataRequest(config, _destination) {
        this.config = config;
        this._destination = _destination;
    }
    Object.defineProperty(ODataRequest.prototype, "destination", {
        get: function () {
            return this._destination;
        },
        set: function (dest) {
            this._destination = scp_cf_1.sanitizeDestination(dest);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Constructs the url for the request at hand.
     *
     * @returns {string} The url for the request
     */
    ODataRequest.prototype.url = function () {
        return "" + remove_slashes_1.removeTrailingSlashes(this.resourceUrl()) + this.query();
    };
    /**
     * Specifies whether the destination needs a specific authentication or not.
     *
     * @returns {boolean} A boolean value that specifies whether the destination needs authentication or not
     * @memberof ODataRequest
     */
    ODataRequest.prototype.needsAuthentication = function () {
        return this.destination.authentication !== 'NoAuthentication';
    };
    /**
     * Returns the service URL for a given OData request.
     *
     * @returns {string} The URL of the service the given entity belongs to
     */
    ODataRequest.prototype.serviceUrl = function () {
        var systemUrl = this.destination.url;
        var servicePath = typeof this.config.customServicePath === 'undefined' ? this.config.defaultServicePath : this.config.customServicePath;
        return remove_slashes_1.removeTrailingSlashes(systemUrl) + "/" + remove_slashes_1.removeSlashes(servicePath);
    };
    /**
     * Returns the URL to a specific OData resource, i.e. the entity collection.
     *
     * @returns {string} The URL of the resource
     */
    ODataRequest.prototype.resourceUrl = function () {
        return remove_slashes_1.removeTrailingSlashes(this.serviceUrl()) + "/" + this.config.resourcePath();
    };
    /**
     * Get query parameters as string. Leads with `?` if  there are parameters to return.
     *
     * @returns {string} Query parameter string
     */
    ODataRequest.prototype.query = function () {
        var queryParameters = this.config.queryParameters();
        var query = Object.entries(queryParameters)
            .map(function (_a) {
            var key = _a[0], value = _a[1];
            return key + "=" + value;
        })
            .join('&');
        return query.length ? "?" + query : '';
    };
    /**
     * Create object containing all headers, including custom headers for the given request.
     *
     * @returns {Promise<MapType<string>>} Key-value pairs where the key is the name of a header property and the value is the respective value
     */
    ODataRequest.prototype.headers = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, header_builder_1.buildHeaders(this).catch(function (error) { return Promise.reject(cloud_sdk_util_1.errorWithCause('Constructing headers for OData request failed!', error)); })];
            });
        });
    };
    /**
     * Execute the given request and return the according promise.
     *
     * @returns {Promise<any>} Promise resolving to the requested data
     */
    ODataRequest.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.headers()
                        .then(function (headers) { return (__assign({ method: _this.config.method, url: _this.url(), headers: headers, data: _this.config.payload }, http_agent_1.getAgentConfig(_this._destination))); })
                        .then(function (requestConfig) { return axios_1.default.request(requestConfig); })
                        .catch(function (error) { return specializeError(error, _this.config.method); })];
            });
        });
    };
    return ODataRequest;
}());
exports.ODataRequest = ODataRequest;
function specializeError(error, requestMethod) {
    if (cloud_sdk_util_1.propertyExists(error, 'response', 'data', 'error')) {
        var s4error = error.response.data.error;
        throw cloud_sdk_util_1.errorWithCause(requestMethod + " request failed! " + (cloud_sdk_util_1.propertyExists(s4error, 'message', 'value') ? s4error.message.value : '') + "\n" + JSON.stringify(s4error), error);
    }
    else {
        throw cloud_sdk_util_1.errorWithCause(requestMethod + " request failed!", error);
    }
}
//# sourceMappingURL=odata-request.js.map