"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var uri_value_converter_1 = require("../../uri-value-converter");
var util_1 = require("../../util");
/**
 * Get the resource path of an entity specified by key-value pairs.
 *
 * @typeparam EntityT Type of the entity to get the resource path for
 * @param keys Key-value pairs where the key is the name of a key property of the given entity and the value is the respective value
 * @param entityConstructor Constructor type of the entity to get the resource path for
 * @returns {string} The path to the resource
 */
function getResourcePathForKeys(keys, entityConstructor) {
    var resources = entityConstructor._entityName;
    if (keys && Object.keys(keys).length) {
        var invalidKeys = filterInvalidKeys(keys);
        if (invalidKeys.length) {
            throw new Error('The provided entity does not hold values for all keys. The following keys have invalid values: ' + invalidKeys.join(', '));
        }
        var byKey = Object.entries(keys)
            .map(function (_a) {
            var key = _a[0], value = _a[1];
            return keyToOData(key, value, entityConstructor);
        })
            .join(',');
        resources = resources + "(" + byKey + ")";
    }
    return resources;
}
exports.getResourcePathForKeys = getResourcePathForKeys;
function filterInvalidKeys(keys) {
    return Object.entries(keys)
        .filter(function (_a) {
        var _ = _a[0], value = _a[1];
        return !isValidKeyValue(value);
    })
        .map(function (_a) {
        var key = _a[0], _ = _a[1];
        return key;
    });
}
function isValidKeyValue(value) {
    return typeof value !== 'undefined' || value !== '' || value !== null;
}
function keyToOData(key, value, entityConstructor) {
    var edmType = entityConstructor[util_1.toStaticPropertyFormat(key)].edmType;
    return key + "=" + uri_value_converter_1.convertToUriFormat(value, edmType);
}
//# sourceMappingURL=get-resource-path.js.map