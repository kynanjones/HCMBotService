"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var order_1 = require("../../order");
/**
 * Get an object containing the given order bys as query parameter, or an empty object if none was given.
 *
 * @typeparam EntityT Type of the entity to order
 * @param orderBy A list of orderables to get the query parameters for
 * @returns {Partial<{ orderby: string; }>} An object containing the query parameter or an empty object
 */
function getQueryParametersForOrderBy(orderBy) {
    if (typeof orderBy !== 'undefined' && orderBy.length) {
        return {
            orderby: getODataOrderByExpressions(orderBy).join(',')
        };
    }
    return {};
}
exports.getQueryParametersForOrderBy = getQueryParametersForOrderBy;
function getODataOrderByExpressions(orderBys, parentFieldNames) {
    if (parentFieldNames === void 0) { parentFieldNames = []; }
    return orderBys.reduce(function (expressions, orderBy) {
        if (orderBy instanceof order_1.OrderLink) {
            return expressions.concat([getOrderByExpressionForOrderLink(orderBy, parentFieldNames.slice())]);
        }
        return expressions.concat([getOrderByExpressionForOrder(orderBy, parentFieldNames)]);
    }, []);
}
function getOrderByExpressionForOrderLink(orderBy, parentFieldNames) {
    if (parentFieldNames === void 0) { parentFieldNames = []; }
    return getODataOrderByExpressions(orderBy.orderBy, parentFieldNames.concat([orderBy.link.fieldName])).join(',');
}
function getOrderByExpressionForOrder(orderBy, parentFieldNames) {
    if (parentFieldNames === void 0) { parentFieldNames = []; }
    return [parentFieldNames.concat([orderBy.fieldName]).join('/'), orderBy.orderType].join(' ');
}
//# sourceMappingURL=get-orderby.js.map