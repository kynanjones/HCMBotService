"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var cloud_sdk_util_1 = require("@sap/cloud-sdk-util");
var destination_accessor_1 = require("../scp-cf/destination-accessor");
var destination_service_types_1 = require("../scp-cf/destination-service-types");
var odata_request_1 = require("./request/odata-request");
/**
 * Base class for all request builders.
 *
 * @abstract
 * @typeparam EntityT Type of the entity to create a request for
 */
var MethodRequestBuilderBase = /** @class */ (function () {
    /**
     * Creates an instance of MethodRequestBuilderBase.
     *
     * @param requestConfig Request configuration to initialize with
     */
    function MethodRequestBuilderBase(requestConfig) {
        this.requestConfig = requestConfig;
    }
    /**
     * Create the url based on configuration of the given builder.
     *
     * @param destination Destination to execute the request against
     * @param options Options to employ when fetching destinations.
     * @returns Promise resolving to the url for the request
     */
    MethodRequestBuilderBase.prototype.url = function (destination, options) {
        return __awaiter(this, void 0, void 0, function () {
            var request;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.build(destination, options)];
                    case 1:
                        request = _a.sent();
                        return [2 /*return*/, request.url()];
                }
            });
        });
    };
    /**
     * Add custom headers to the request.
     *
     * @param headers Key-value pairs denoting additional custom headers
     * @returns The request builder itself, to facilitate method chaining
     */
    MethodRequestBuilderBase.prototype.withCustomHeaders = function (headers) {
        this.requestConfig.addCustomHeaders(headers);
        return this;
    };
    /**
     * Replace the default service path with the given custom path.
     * In case of the S/4HANA apis the servicePath defaults to '/sap/opu/odata/sap/<SERVICE_NAME>' and can be overwritten here.
     *
     * @param servicePath Path to override the default with
     * @returns The request builder itself, to facilitate method chaining
     */
    MethodRequestBuilderBase.prototype.withCustomServicePath = function (servicePath) {
        this.requestConfig.customServicePath = servicePath;
        return this;
    };
    /**
     * Build an ODataRequest that holds essential configuration for the service request and executes it.
     *
     * @param destination Targeted destination on which the request is performed.
     * @param options Options to employ when fetching destinations.
     * @returns The OData request executor including the destination configuration.
     */
    MethodRequestBuilderBase.prototype.build = function (destination, options) {
        var _this = this;
        return destination_accessor_1.useOrFetchDestination(destination, options)
            .then(function (dest) {
            if (!dest) {
                throw Error(noDestinationErrorMessage(destination));
            }
            return new odata_request_1.ODataRequest(_this.requestConfig, dest);
        })
            .catch(function (error) { return Promise.reject(cloud_sdk_util_1.errorWithCause(noDestinationErrorMessage(destination), error)); });
    };
    return MethodRequestBuilderBase;
}());
exports.MethodRequestBuilderBase = MethodRequestBuilderBase;
function noDestinationErrorMessage(destination) {
    return destination_service_types_1.isDestinationNameAndJwt(destination)
        ? "Could not find a destination with name \"" + destination.destinationName + "\"! Unable to execute request."
        : 'Could not find a destination to execute request against and no destination name has been provided (this should never happen)!';
}
//# sourceMappingURL=request-builder-base.js.map