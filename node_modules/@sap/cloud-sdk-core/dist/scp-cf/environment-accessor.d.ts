/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { MapType } from '@sap/cloud-sdk-util';
import { DecodedJWT } from '../util';
import { DestinationServiceCredentials, XsuaaServiceCredentials } from './environment-accessor-types';
/**
 * Basic Credentials Getter from Destination service credentials needed for JWT generator.
 *
 * @returns credentials.
 */
export declare function getDestinationBasicCredentials(): BasicCredentials;
/**
 * First 'destination' credentials getter.
 *
 * @returns 'destination' credentials object.
 *          null: if there is no existing 'destination' credentials
 */
export declare function getDestinationServiceCredentials(): any;
/**
 * Destination credentials getter.
 *
 * @returns: list of 'credentials' objects in 'destination' service.
 */
export declare function getDestinationServiceCredentialsList(): DestinationServiceCredentials[];
/**
 * Credentials list getter for a given service.
 *
 * @param service: Service name
 * @returns Fetched credentials objects of existing service in 'VCAP_SERVICES'.
 */
export declare function getServiceCredentialsList(service: string): any[];
/**
 * Services getter for a given service.
 *
 * @param service Service name.
 * @returns List of service bindings of the given type. Returns an empty array if no service binding exists for the given type.
 */
export declare function getServiceList(service: string): any[];
/**
 * 'VCAP_SERVICES' Getter from environment variables.
 * This function returns the VCAP_SERVICES as object or null if it is not defined (i.e. no services are bound to the application).
 *
 * @returns: 'VCAP_SERVICES' found in environment variables or null if not defined. The key denotes the name ov the service and the value is the definition.
 */
export declare function getVcapService(): MapType<any> | null;
/**
 * Environment variables accessor.
 *
 * @param name Environment variable name.
 * @returns Env variable value if defined.
 *           null: If not defined.
 */
export declare function getEnvironmentVariable(name: string): string | null;
/**
 * Destination URI getter
 * NOTICE: If there exist more than one destination/uri, the function
 * returns the first entry.
 *
 * @returns: the first existing uri in destination.
 *          null: if no valid destination is found.
 */
export declare function getDestinationServiceUri(): string | null;
/**
 * Takes a decoded JWT and uses the client_id and audience claims to determine the XSUAA service instance
 * that issued the JWT. Returns the credentials if a match is found otherwise returns null.
 * If no decoded JWT is specified, then returns the first existing XSUAA credential service plan "application".
 *
 * @param token Either an encoded or decoded JWT.
 * @returns The credentials for a match, otherwise null.
 */
export declare function getXsuaaServiceCredentials(token?: DecodedJWT | string): XsuaaServiceCredentials;
interface BasicCredentials {
    clientid: string;
    clientsecret: string;
}
/**
 * @deprecated Use directly exported functions instead
 */
export declare const EnvironmentAccessor: {
    getDestinationBasicCredentials: typeof getDestinationBasicCredentials;
    getDestinationServiceCredentials: typeof getDestinationServiceCredentials;
    getDestinationServiceCredentialsList: typeof getDestinationServiceCredentialsList;
    getServiceCredentialsList: typeof getServiceCredentialsList;
    getServiceList: typeof getServiceList;
    getVcapService: typeof getVcapService;
    getEnvironmentVariable: typeof getEnvironmentVariable;
    getDestinationServiceUri: typeof getDestinationServiceUri;
    getXsuaaServiceCredentials: typeof getXsuaaServiceCredentials;
};
export {};
//# sourceMappingURL=environment-accessor.d.ts.map