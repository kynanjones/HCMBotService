"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var destination_1 = require("./destination");
/**
 * Get all destinations from the environment variable "destinations".
 * This is discouraged for productive use! Use destination-accessor/useOrFetchDestination for fetching destinations
 * from the Cloud Foundry destination service.
 *
 * @returns A list of destinations
 */
function getDestinationsFromEnv() {
    if (getDestinationsEnvVariable()) {
        return JSON.parse(getDestinationsEnvVariable()).map(function (entry) { return destination_1.sanitizeDestination(entry); });
    }
    else {
        return [];
    }
}
exports.getDestinationsFromEnv = getDestinationsFromEnv;
/**
 * @deprecated Since v1.4.2. Use [[getDestinationsFromEnv]] instead.
 *
 * Get all destinations from the environment variable "destinations".
 * This is discouraged for productive use! Use destination-accessor/useOrFetchDestination for fetching destinations
 * from the Cloud Foundry destination service.
 *
 * @returns A list of destinations
 */
function getDestinations() {
    return getDestinationsFromEnv();
}
exports.getDestinations = getDestinations;
/**
 * Get a destination from the environment variables by name. Throws an error if there are multiple destinations with the same name.
 * This is discouraged for productive use! Use destination-accessor/useOrFetchDestination for fetching destinations
 * from the Cloud Foundry destination service.
 *
 * @param name Name of the destination
 * @returns The requested destination if existent, otherwise `null`
 */
function getDestinationFromEnvByName(name) {
    if (getDestinationsEnvVariable()) {
        var destinations = getDestinationsFromEnv().filter(function (dest) { return dest.name === name; });
        if (destinations.length > 1) {
            throw new Error("There are multiple destinations with the name \"" + name + "\".");
        }
        return destinations[0];
    }
    else {
        return null;
    }
}
exports.getDestinationFromEnvByName = getDestinationFromEnvByName;
/**
 * @deprecated Since v1.4.2. Use [[getDestinationFromEnvByName]] instead.
 *
 * Get a destination from the environment variables by name. Throws an error if there are multiple destinations with the same name.
 * This is discouraged for productive use! Use destination-accessor/useOrFetchDestination for fetching destinations
 * from the Cloud Foundry destination service.
 *
 * @param name Name of the destination
 * @returns The requested destination if existent, otherwise `null`
 */
function getDestinationByName(name) {
    return getDestinationFromEnvByName(name);
}
exports.getDestinationByName = getDestinationByName;
// tslint:disable: valid-jsdoc
/**
 * @hidden
 */
function getDestinationConfig(dest) {
    if (dest === void 0) { dest = 'ErpQueryEndpoint'; }
    if (typeof dest === 'string') {
        return getDestinationFromEnvByName(dest);
    }
    else {
        return dest;
    }
}
exports.getDestinationConfig = getDestinationConfig;
/**
 * @hidden
 */
function getDestinationsEnvVariable() {
    return process.env['destinations'];
}
exports.getDestinationsEnvVariable = getDestinationsEnvVariable;
//# sourceMappingURL=env-destination-accessor.js.map