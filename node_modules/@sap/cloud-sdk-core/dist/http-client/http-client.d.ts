/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Destination, DestinationNameAndJwt } from '../scp-cf';
import { DestinationHttpRequestConfig, ExecuteHttpRequestFn, HttpRequestConfig, HttpResponse } from './http-client-types';
/**
 * Builds a [[DestinationHttpRequestConfig]] for the given destination.
 * If a destination name (and a JWT) are provided, it will try to resolve the destination.
 *
 * @param destination A destination or a destination name and a JWT.
 * @returns A [[DestinationHttpRequestConfig]].
 */
export declare function buildHttpRequest(destination: Destination | DestinationNameAndJwt): Promise<DestinationHttpRequestConfig>;
/**
 * Builds a [[DestinationHttpRequestConfig]] for the given destination
 * and then merges it into the given requestConfig.
 * NOTE: If the properties baseURL, httpClient, and httpsClient exist on the given requestConfig,
 * they will be overwritten. Headers will be merged, whereby any headers built from the given destination
 * will overwrite existing headers (e.g. the Authorization header).
 *
 * @param destination A destination or a destination name and a JWT.
 * @param requestConfig Any object representing an HTTP request.
 * @returns The given request config merged with the config built for the given destination.
 */
export declare function addDestinationToRequestConfig<T>(destination: Destination | DestinationNameAndJwt, requestConfig: T): Promise<T & DestinationHttpRequestConfig>;
/**
 * Takes as paramter a function that expects an [[HttpRequest]] and returns a Promise of [[HttpResponse]].
 * Returns a function that takes a destination and a request, builds an [[HttpRequest]] from them, and calls
 * the provided execute function.
 *
 * NOTE: If you simply want to execute a request without passing your own execute function, use [[executeHttpRequest]] instead!
 *
 * @param executeFn Optional: a function that can execute an [[HttpRequestConfig]].
 * @returns A function expecting destination and a request.
 */
export declare const execute: (executeFn: ExecuteHttpRequestFn) => <T extends HttpRequestConfig>(destination: Destination | DestinationNameAndJwt, requestConfig: T) => Promise<HttpResponse>;
/**
 * Builds a [[DestinationHttpRequestConfig]] for the given destination, merges it into the given requestConfig
 * and executes it (using Axios).
 *
 * @param destination A destination or a destination name and a JWT.
 * @param requestConfig Any object representing an HTTP request.
 * @returns An [[HttpResponse]].
 */
export declare const executeHttpRequest: <T extends HttpRequestConfig>(destination: Destination | DestinationNameAndJwt, requestConfig: T) => Promise<HttpResponse>;
//# sourceMappingURL=http-client.d.ts.map