"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var payload_value_converter_1 = require("./payload-value-converter");
var selectable_1 = require("./selectable");
var util_1 = require("./util");
/**
 * Converts an instance of an entity class into a JSON payload to be sent to an OData service.
 *
 * @param entity An instance of an entity.
 * @param entityConstructor The constructor function of that entity.
 * @returns JSON.
 */
function serializeEntity(entity, entityConstructor) {
    return __assign({}, serializeEntityNonCustomFields(entity, entityConstructor), entity.getCustomFields());
}
exports.serializeEntity = serializeEntity;
/**
 * Converts an instance of an entity class into a JSON payload to be sent to an OData service, ignoring custom fields.
 *
 * @param entity An instance of an entity.
 * @param entityConstructor The constructor function of that entity.
 * @returns JSON.
 */
function serializeEntityNonCustomFields(entity, entityConstructor) {
    return Object.keys(entity).reduce(function (serialized, key) {
        var selectable = entityConstructor[util_1.toStaticPropertyFormat(key)];
        var fieldValue = entity[key];
        if (fieldValue === null) {
            serialized[selectable.fieldName] = null;
        }
        else if (selectable instanceof selectable_1.EdmTypeField) {
            serialized[selectable.fieldName] = payload_value_converter_1.tsToEdm(fieldValue, selectable.edmType);
        }
        else if (selectable instanceof selectable_1.OneToOneLink) {
            serialized[selectable.fieldName] = serializeEntityNonCustomFields(fieldValue, selectable.linkedEntity);
        }
        else if (selectable instanceof selectable_1.Link) {
            serialized[selectable.fieldName] = fieldValue.map(function (linkedEntity) { return serializeEntityNonCustomFields(linkedEntity, selectable.linkedEntity); });
        }
        else if (selectable instanceof selectable_1.ComplexTypeField) {
            serialized[selectable.fieldName] = serializeComplexTypeField(selectable, fieldValue);
        }
        return serialized;
    }, {});
}
exports.serializeEntityNonCustomFields = serializeEntityNonCustomFields;
function serializeComplexTypeField(selectable, fieldValue) {
    return Object.entries(selectable).reduce(function (complexTypeObject, _a) {
        var propertyKey = _a[0], propertyValue = _a[1];
        var value = fieldValue[propertyKey];
        if (propertyValue instanceof selectable_1.EdmTypeField && typeof value !== 'undefined') {
            complexTypeObject[propertyValue.fieldName] = payload_value_converter_1.tsToEdm(fieldValue[propertyKey], propertyValue.edmType);
        }
        return complexTypeObject;
    }, {});
}
//# sourceMappingURL=entity-serializer.js.map