/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Entity } from '../entity';
import { Link, SimpleTypeFields } from '../selectable';
import { ComplexTypePropertyFields } from '../selectable/complex-type-property-fields';
import { Order } from './order';
import { OrderLink } from './order-link';
/**
 * A union of all types that can be used for ordering.
 *
 * @typeparam EntityT Type of the entity to be ordered
 */
export declare type Orderable<EntityT extends Entity> = Order<EntityT> | OrderLink<EntityT, Entity>;
/**
 * A union of all types that can be used as input for ordering.
 *
 * @typeparam EntityT Type of the entity to be ordered
 */
export declare type OrderableInput<EntityT extends Entity> = SimpleTypeFields<EntityT> | Link<EntityT, Entity> | ComplexTypePropertyFields<EntityT>;
/**
 * Create new Order by `orderBy.fieldName` in ascending order.
 *
 * @typeparam EntityT Type of the entity to be ordered
 * @param orderBy Field or link to be ordered by
 * @returns New order
 */
export declare function asc<EntityT extends Entity>(orderBy: OrderableInput<EntityT>): Orderable<EntityT>;
/**
 * Create new Order by `orderBy.fieldName` in descending order.
 *
 * @typeparam EntityT Type of the entity to be ordered
 * @param orderBy Field or link to be ordered by
 * @returns New order
 */
export declare function desc<EntityT extends Entity>(orderBy: OrderableInput<EntityT>): Orderable<EntityT>;
//# sourceMappingURL=orderable.d.ts.map