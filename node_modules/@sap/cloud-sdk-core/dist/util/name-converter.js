"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var voca_1 = __importDefault(require("voca"));
/**
 * Converts a string to the case used by static helpers in the VDM. Use this for serialization in the VDM.
 *
 * @param str The string to be transformed.
 * @returns The input string in the case used by static helpers in the VDM.
 */
function toStaticPropertyFormat(str) {
    return voca_1.default.upperCase(voca_1.default.snakeCase(str));
}
exports.toStaticPropertyFormat = toStaticPropertyFormat;
/**
 * Converts a string to the format used by properties. Use this for serialization in the VDM.
 *
 * @param str The string to be transformed.
 * @returns The transformed string.
 */
function toPropertyFormat(str) {
    return voca_1.default.camelCase(str);
}
exports.toPropertyFormat = toPropertyFormat;
/**
 * Converts a string to a human readable format, e.g. it transforms `to_BusinessPartner` to `To Business Partner`. Use this for serialization in the VDM.
 *
 * @param str The string to be transformed.
 * @returns The transformed string.
 */
function toTitleFormat(str) {
    return voca_1.default.titleCase(voca_1.default.words(str).join(' '));
}
exports.toTitleFormat = toTitleFormat;
/**
 * Converts a string to the format used by properties. Use this for serialization in the VDM.
 * @param str The string to be transformed.
 * @returns The transformed string.
 */
function toTypeNameFormat(str) {
    return voca_1.default
        .words(str)
        .map(function (word) { return voca_1.default.capitalize(word); })
        .join('');
}
exports.toTypeNameFormat = toTypeNameFormat;
//# sourceMappingURL=name-converter.js.map